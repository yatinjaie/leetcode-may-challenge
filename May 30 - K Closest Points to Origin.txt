Question - https://leetcode.com/explore/challenge/card/may-leetcoding-challenge/538/week-5-may-29th-may-31st/3345/

Code - 

class Solution {
    public int[][] kClosest(int[][] points, int K) {
        int[][] result = new int[K][2];
        Comparator<int[]> comparator = new Comparator<int[]>() {
            @Override
            public int compare(int[] a1, int[] a2) {
                return (int)(Math.pow(a1[0],2) + Math.pow(a1[1],2)) - (int)(Math.pow(a2[0],2) + Math.pow(a2[1],2));
            }
        };
         PriorityQueue<int[]> priorityQueue = new PriorityQueue<>(comparator);
        
        for(int[] point : points){
            priorityQueue.add(point);
        }
        for(int i =0 ;i<K;i++){
            result[i] = priorityQueue.poll();
        }
    return result;
    }
}