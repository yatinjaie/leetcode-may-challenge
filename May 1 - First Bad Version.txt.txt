Question - https://leetcode.com/explore/challenge/card/may-leetcoding-challenge/534/week-1-may-1st-may-7th/3316/

Logic - Use binary search. If the middle element is bad, then check if its the first bad element. If not, then check the left sub-array for the first bad element. If the middle element is not bad, check the right sub-array for the first bad element.

Code -


 /* The isBadVersion API is defined in the parent class VersionControl.
      boolean isBadVersion(int version); */

public class Solution extends VersionControl {
    
    public int firstBadVersion(int n) {

           int left = 1;
    int right = n;

        while (left < right) {
            int mid = left + (int)Math.floor((right - left) / 2);
            if (!isBadVersion(mid)) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }

        return left; 
}
}