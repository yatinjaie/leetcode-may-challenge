Question - https://leetcode.com/explore/challenge/card/may-leetcoding-challenge/536/week-3-may-15th-may-21st/3330/

Logic - Calculate maximum sum in an array using Kanade's algorithm, Find max cicular sum(in exists) by (Sum of array - minimum sum), Find maximum of 1 and 2.

Code - 

class Solution {
    public int maxSubarraySumCircular(int[] A) {
        if(A.length == 0) return 0;
        int n = A.length;
        int max = A[0];
        int maxEnding = A[0];
        int min = A[0];
        int minEnding = A[0];
        int sum = A[0];
        for(int i = 1 ;i< n ;i ++){
            maxEnding = Math.max(A[i], maxEnding+A[i]);
            max = Math.max(max,maxEnding);
            
            minEnding = Math.min(A[i], minEnding+A[i]);
            min = Math.min(min,minEnding);
            
            sum = sum + A[i];
        }
        if(sum == minEnding) return max;
        return Math.max(sum - min, max);
    }

}
